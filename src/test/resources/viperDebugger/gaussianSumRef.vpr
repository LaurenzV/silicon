field val : Int

method gaussian_sum(n : Ref)
    requires ge0(n)
{
    unfold ge0(n)

    var i : Int := 0
    var r : Int := 0

    while(i < n.val)
        invariant acc(n.val)
        invariant r == i * (i-1) / 2
        invariant i <= n.val
        invariant 0 <= n.val
    {
        r := r + i
        i := i + 1
    }

    assert r == n.val * (n.val+1) / 2
}

predicate ge0(n : Ref)
{
    acc(n.val) &&  n.val >= 0
}

method testRef()
{
    var x : Ref
    x := new() // missing permission
    var y : Int
    x.val := 2
    y := x.val + y
    assert y >= x.val
}